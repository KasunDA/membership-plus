//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool from CryptoGateway Software Inc.
//     Tool name: CGW X-Script RDB visual Layer Generator
//
//     Archymeta Information Technologies Co., Ltd.
//
//     Changes to this file, could be overwritten if the code is re-generated.
//     Add (if not yet) a code-manager node to the generator to specify 
//     how existing files are processed.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Configuration;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;
using System.Threading;
using System.Runtime.Serialization;
using System.Xml;
using System.Text;

namespace CryptoGateway.RDB.Data.MembershipPlus
{
    /// <summary>
    /// Interface for data provider for performing data import.
    /// </summary>
    public interface IMembershipPlusImportProvider
    {
        /// <summary>
        /// When implemeneted, a data structure relevent to the source that can be used by the provider to get data from the source.
        /// </summary>
        object DataSourceParams { get; set; }
        /// <summary>
        /// When implemeneted, a callback to update the entity count of the corresponding data set.
        /// </summary>
        Action<EntitySetType, Int64> UpdateEntityCount{ get; set; }
        /// <summary>
        /// When implemeneted, the <c>Announcement</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<Announcement> GetAnnouncements();

        /// <summary>
        /// When implemeneted, the <c>Application_</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<Application_> GetApplication_s();

        /// <summary>
        /// When implemeneted, the <c>Communication</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<Communication> GetCommunications();

        /// <summary>
        /// When implemeneted, the <c>CommunicationType</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<CommunicationType> GetCommunicationTypes();

        /// <summary>
        /// When implemeneted, the <c>EventCalendar</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<EventCalendar> GetEventCalendars();

        /// <summary>
        /// When implemeneted, the <c>EventCalendarShareCircle</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<EventCalendarShareCircle> GetEventCalendarShareCircles();

        /// <summary>
        /// When implemeneted, the <c>EventType</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<EventType> GetEventTypes();

        /// <summary>
        /// When implemeneted, the <c>MemberCallback</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<MemberCallback> GetMemberCallbacks();

        /// <summary>
        /// When implemeneted, the <c>MemberNotification</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<MemberNotification> GetMemberNotifications();

        /// <summary>
        /// When implemeneted, the <c>MemberNotificationType</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<MemberNotificationType> GetMemberNotificationTypes();

        /// <summary>
        /// When implemeneted, the <c>NotificationTaskSchedule</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<NotificationTaskSchedule> GetNotificationTaskSchedules();

        /// <summary>
        /// When implemeneted, the <c>Role</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<Role> GetRoles();

        /// <summary>
        /// When implemeneted, the post <c>Role</c> data processor used to do processing after all corresponding entities are entered into the database.
        /// </summary>
        Action<CallContext, IRoleService2, Dictionary<int, int>> PostRoleProcessor
        {
            get;
        }

        /// <summary>
        /// When implemeneted, the <c>ShortMessageAttachment</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<ShortMessageAttachment> GetShortMessageAttachments();

        /// <summary>
        /// When implemeneted, the <c>ShortMessageAudience</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<ShortMessageAudience> GetShortMessageAudiences();

        /// <summary>
        /// When implemeneted, the <c>ShortMessageDataBlock</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<ShortMessageDataBlock> GetShortMessageDataBlocks();

        /// <summary>
        /// When implemeneted, the <c>ShortMessage</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<ShortMessage> GetShortMessages();

        /// <summary>
        /// When implemeneted, the <c>ShortMessageType</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<ShortMessageType> GetShortMessageTypes();

        /// <summary>
        /// When implemeneted, the <c>SignalRHostState</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<SignalRHostState> GetSignalRHostStates();

        /// <summary>
        /// When implemeneted, the <c>SignalRMessage</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<SignalRMessage> GetSignalRMessages();

        /// <summary>
        /// When implemeneted, the <c>UserAppMember</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserAppMember> GetUserAppMembers();

        /// <summary>
        /// When implemeneted, the <c>UserAssociation</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserAssociation> GetUserAssociations();

        /// <summary>
        /// When implemeneted, the <c>UserAssociationType</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserAssociationType> GetUserAssociationTypes();

        /// <summary>
        /// When implemeneted, the <c>UserAssocInvitation</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserAssocInvitation> GetUserAssocInvitations();

        /// <summary>
        /// When implemeneted, the <c>UserDetail</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserDetail> GetUserDetails();

        /// <summary>
        /// When implemeneted, the <c>UserGroupAdminRole</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserGroupAdminRole> GetUserGroupAdminRoles();

        /// <summary>
        /// When implemeneted, the <c>UserGroupMember</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserGroupMember> GetUserGroupMembers();

        /// <summary>
        /// When implemeneted, the <c>UserGroup</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserGroup> GetUserGroups();

        /// <summary>
        /// When implemeneted, the <c>UserGroupType</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserGroupType> GetUserGroupTypes();

        /// <summary>
        /// When implemeneted, the <c>UserProfile</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserProfile> GetUserProfiles();

        /// <summary>
        /// When implemeneted, the <c>UserProfileType</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UserProfileType> GetUserProfileTypes();

        /// <summary>
        /// When implemeneted, the <c>User</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<User> GetUsers();

        /// <summary>
        /// When implemeneted, the <c>UsersInRole</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UsersInRole> GetUsersInRoles();

        /// <summary>
        /// When implemeneted, the <c>UsersRoleHistory</c> enumerator used to fetch the corresponding entities from the data source.
        /// </summary>
        IEnumerable<UsersRoleHistory> GetUsersRoleHistorys();

    }
}